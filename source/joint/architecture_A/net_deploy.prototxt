name: "joint_A_deploy"

layer {
  name: "data"
  type: "Input"
  top: "X"
  input_param { shape: { dim: 1 dim: 3 dim: 218 dim: 298 } }
}
# GLOBAL
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "X"
  top: "conv1"
  param {
    lr_mult: 0.02
    decay_mult: 1
  }
  param {
    lr_mult:  0.02
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 4
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult:  0.02
    decay_mult: 1
  }
  param {
    lr_mult:  0.02
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult:  0.02
    decay_mult: 1
  }
  param {
    lr_mult:  0.02
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}


# GRADIENT

layer {
  name: "conv1_g"
  type: "Convolution"
  bottom: "X"
  top: "conv1_g"
  param {
    lr_mult: 0.0005
    decay_mult: 1
  }
  param {
    lr_mult:  0.0005
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "constant"
      value: 0.00
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_g"
  type: "ReLU"
  bottom: "conv1_g"
  top: "conv1_g"
}
layer {
  name: "norm1_g"
  type: "LRN"
  bottom: "conv1_g"
  top: "norm1_g"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1_g"
  type: "Pooling"
  bottom: "norm1_g"
  top: "pool1_g"
  pooling_param {
    pool: MAX
    kernel_size: 4
    stride: 2
  }
}
layer {
  name: "conv2-grad"
  type: "Convolution"
  bottom: "pool1_g"
  top: "conv2_g"
  param {
    lr_mult:  0.5
    decay_mult: 1
  }
  param {
    lr_mult:  0.5
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 1
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2_g"
  type: "ReLU"
  bottom: "conv2_g"
  top: "conv2_g"
}
layer {
  name: "conv3-grad"
  type: "Convolution"
  bottom: "conv2_g"
  top: "conv3_g"
  param {
    lr_mult:  0.5
    decay_mult: 1
  }
  param {
    lr_mult:  0.5
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_g"
  type: "ReLU"
  bottom: "conv3_g"
  top: "conv3_g"
}

# JOINT PART

layer {
  name: "concat"
  bottom: "conv3"
  bottom: "conv3_g"
  top: "joint"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

# AFTER JOINT GLOBAL

layer {
  name: "conv4_joint"
  type: "Convolution"
  bottom: "joint"
  top: "conv4"
  param {
    lr_mult:  0.02
    decay_mult: 1
  }
  param {
    lr_mult:  0.02
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult:  0.02
    decay_mult: 1
  }
  param {
    lr_mult:  0.02
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

# MAIN

layer {
  name: "fc-main"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc-main"
  param {
    decay_mult: 1
  }
  param {
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc-main"
  top: "fc-main"
}
layer {
  name: "fc-depth"
  type: "InnerProduct"
  bottom: "fc-main"
  top: "fc-depth"
  param {
    decay_mult: 1
    lr_mult:  0.2
  }
  param {
    lr_mult:  0.2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 999
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0.5
    }
  }
}
layer {
    name: "reshape"
    type: "Reshape"
    bottom: "fc-depth"
    top: "depth"
    reshape_param {
      shape {
        dim: 0  # copy the dimension from below
        dim: 1
        dim: 27
        dim: 37 # infer it from the other dimensions
      }
    }
  }

# AFTER JOINT GRAD
layer {
  name: "conv4-grad"
  type: "Convolution"
  bottom: "joint"
  top: "conv4_g"
  param {
    lr_mult:  0.5
    decay_mult: 1
  }
  param {
    lr_mult:  0.5
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 2
    kernel_size: 5
    group: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4_g"
  type: "ReLU"
  bottom: "conv4_g"
  top: "conv4_g"
}
layer {
  name: "conv5-grad"
  type: "Convolution"
  bottom: "conv4_g"
  top: "gradient"
  param {
    lr_mult:  0.05
    decay_mult: 1
  }
  param {
    lr_mult:  0.05
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    pad: 2
    kernel_size: 5
    group: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}


